% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\docType{class}
\name{VitessceConfig}
\alias{VitessceConfig}
\title{VitessceConfig Class}
\value{
Self, to allow chaining.

Self, to allow chaining.

A \code{list} that can be serialized to JSON.

A \code{list} of either \code{VitessceConfigServerCallbackRoute} or \code{VitessceConfigServerStaticRoute}.

The Vitessce htmlwidget.
}
\description{
Class representing a Vitessce view config.
}
\details{
VitessceConfig
}
\examples{

## ------------------------------------------------
## Method `VitessceConfig$add_dataset`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")

## ------------------------------------------------
## Method `VitessceConfig$add_view`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
spatial <- vc$add_view(ds, "spatial")

## ------------------------------------------------
## Method `VitessceConfig$add_coordination`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
spatial <- vc$add_view(ds, "spatial")
c_scopes <- vc$add_coordination(c("spatialZoom", "spatialTargetX"))
spatial$use_coordination(c_scopes)

## ------------------------------------------------
## Method `VitessceConfig$layout`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
spatial <- vc$add_view(ds, "spatial")
scatterplot <- vc$add_view(ds, "scatterplot")

## ------------------------------------------------
## Method `VitessceConfig$link_views`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
ref_dataset <- vc$add_dataset("Reference")
qry_dataset <- vc$add_dataset("Query")
ref_plot <- vc$add_view(ref_dataset, Component$SCATTERPLOT, mapping = "umap")
qry_plot <- vc$add_view(qry_dataset, Component$SCATTERPLOT, mapping = "proj.umap")
vc$link_views(c(ref_plot, qry_plot), c(CoordinationType$EMBEDDING_TARGET_X, CoordinationType$EMBEDDING_TARGET_Y), c_values = c(0, 0))

## ------------------------------------------------
## Method `VitessceConfig$to_list`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
vc_list <- vc$to_list(base_url = "http://localhost:8000")

## ------------------------------------------------
## Method `VitessceConfig$widget`
## ------------------------------------------------

vc <- VitessceConfig$new("My config")
dataset <- vc$add_dataset("My dataset")
description <- vc$add_view(dataset, Component$DESCRIPTION)
vc$layout(description)
vc$widget()
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{config}}{The internal representation of the view config.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{VitessceConfig$new()}}
\item \href{#method-add_dataset}{\code{VitessceConfig$add_dataset()}}
\item \href{#method-add_view}{\code{VitessceConfig$add_view()}}
\item \href{#method-add_coordination}{\code{VitessceConfig$add_coordination()}}
\item \href{#method-layout}{\code{VitessceConfig$layout()}}
\item \href{#method-link_views}{\code{VitessceConfig$link_views()}}
\item \href{#method-to_list}{\code{VitessceConfig$to_list()}}
\item \href{#method-get_routes}{\code{VitessceConfig$get_routes()}}
\item \href{#method-widget}{\code{VitessceConfig$widget()}}
\item \href{#method-clone}{\code{VitessceConfig$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new config object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$new(name = NA, description = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A name for the config.}

\item{\code{description}}{A description for the config.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{VitessceConfig} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-add_dataset}{}}}
\subsection{Method \code{add_dataset()}}{
Add a dataset to the config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$add_dataset(name, uid = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A name for the dataset.}

\item{\code{uid}}{A unique ID for the dataset. Optional. Created automatically if not provided.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{VitessceConfigDataset} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_view"></a>}}
\if{latex}{\out{\hypertarget{method-add_view}{}}}
\subsection{Method \code{add_view()}}{
Add a view to the config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$add_view(
  dataset,
  component,
  x = NA,
  y = NA,
  w = NA,
  h = NA,
  mapping = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{The dataset object to associate with this view.}

\item{\code{component}}{The name of a component to render in this view.}

\item{\code{x}}{The x-coordinate of the view in the layout.}

\item{\code{y}}{The y-coordinate of the view in the layout.}

\item{\code{w}}{The width of the view in the layout.}

\item{\code{h}}{The height of the view in the layout.}

\item{\code{mapping}}{An optional convenience parameter for setting the \code{CoordinationType$EMBEDDING_TYPE} coordination value if the component is\code{Component$SCATTERPLOT}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{VitessceConfigView} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
spatial <- vc$add_view(ds, "spatial")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_coordination"></a>}}
\if{latex}{\out{\hypertarget{method-add_coordination}{}}}
\subsection{Method \code{add_coordination()}}{
Add a coordination scope to the config, for one or more coordination types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$add_coordination(c_types)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{c_types}}{The coordination types for which to create new coordination scopes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of new \code{VitessceConfigCoordinationScope} objects.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
spatial <- vc$add_view(ds, "spatial")
c_scopes <- vc$add_coordination(c("spatialZoom", "spatialTargetX"))
spatial$use_coordination(c_scopes)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-layout"></a>}}
\if{latex}{\out{\hypertarget{method-layout}{}}}
\subsection{Method \code{layout()}}{
Define the layout of views.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$layout(view_concat)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{view_concat}}{A concatenation of views.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
spatial <- vc$add_view(ds, "spatial")
scatterplot <- vc$add_view(ds, "scatterplot")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-link_views"></a>}}
\if{latex}{\out{\hypertarget{method-link_views}{}}}
\subsection{Method \code{link_views()}}{
A convenience function for setting up new coordination scopes across a set of views.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$link_views(views, c_types, c_values = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{views}}{An array of view objects to link together.}

\item{\code{c_types}}{The coordination types on which to coordinate the views.}

\item{\code{c_values}}{Initial values corresponding to each coordination type.
Should have the same length as the c_types array. Optional.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
ref_dataset <- vc$add_dataset("Reference")
qry_dataset <- vc$add_dataset("Query")
ref_plot <- vc$add_view(ref_dataset, Component$SCATTERPLOT, mapping = "umap")
qry_plot <- vc$add_view(qry_dataset, Component$SCATTERPLOT, mapping = "proj.umap")
vc$link_views(c(ref_plot, qry_plot), c(CoordinationType$EMBEDDING_TARGET_X, CoordinationType$EMBEDDING_TARGET_Y), c_values = c(0, 0))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-to_list}{}}}
\subsection{Method \code{to_list()}}{
Convert the config to an R list. Helpful when converting the config to JSON.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$to_list(base_url = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{base_url}}{An base URL to prepend to file paths.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
ds <- vc$add_dataset("My dataset")
vc_list <- vc$to_list(base_url = "http://localhost:8000")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_routes"></a>}}
\if{latex}{\out{\hypertarget{method-get_routes}{}}}
\subsection{Method \code{get_routes()}}{
Get a list of web server route objects corresponding to any local files which will need to be served.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$get_routes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-widget"></a>}}
\if{latex}{\out{\hypertarget{method-widget}{}}}
\subsection{Method \code{widget()}}{
Create an htmlwidget based on this config.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$widget(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theme}}{The theme of the widget, either "dark" or "light". Optional. By default, "dark".}

\item{\code{width}}{The width of the widget as a number or CSS string. Optional.}

\item{\code{height}}{The height of the widget as a number or CSS string. Optional.}

\item{\code{port}}{The port for the local web server (which serves local dataset objects to the widget).
Optional. By default, uses open port between 8000 and 9000.}

\item{\code{element_id}}{An element ID. Optional.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{vc <- VitessceConfig$new("My config")
dataset <- vc$add_dataset("My dataset")
description <- vc$add_view(dataset, Component$DESCRIPTION)
vc$layout(description)
vc$widget()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VitessceConfig$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
