% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zarr.R
\docType{class}
\name{DirectoryStore}
\alias{DirectoryStore}
\title{DirectoryStore Class}
\description{
Store class using directories and files on a standard file system.
Adapted from https://github.com/zarr-developers/zarr_implementations/blob/c0bd932/generate_data/js/src/fsstore.js#L7
}
\details{
DirectoryStore for Zarr
}
\keyword{internal}
\section{Super class}{
\code{\link[vitessce:Store]{vitessce::Store}} -> \code{DirectoryStore}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{root}}{The path to the root of the store.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DirectoryStore$new()}}
\item \href{#method-get_item}{\code{DirectoryStore$get_item()}}
\item \href{#method-set_item}{\code{DirectoryStore$set_item()}}
\item \href{#method-contains_item}{\code{DirectoryStore$contains_item()}}
\item \href{#method-clone}{\code{DirectoryStore$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new file system store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DirectoryStore$new(root)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{root}}{The path to the root of the store.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{DirectoryStore} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_item"></a>}}
\if{latex}{\out{\hypertarget{method-get_item}{}}}
\subsection{Method \code{get_item()}}{
Get an item from the store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DirectoryStore$get_item(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{The item key.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The item data in a vector of type raw.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_item"></a>}}
\if{latex}{\out{\hypertarget{method-set_item}{}}}
\subsection{Method \code{set_item()}}{
Set an item in the store.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DirectoryStore$set_item(key, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{The item key.}

\item{\code{value}}{The item value as a vector of type raw.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-contains_item"></a>}}
\if{latex}{\out{\hypertarget{method-contains_item}{}}}
\subsection{Method \code{contains_item()}}{
Determine whether the store contains an item.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DirectoryStore$contains_item(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{The item key.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DirectoryStore$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
